body{height: 3000px;}

#wrap{margin:0 auto; position:relative; width:300px; height:200px; overflow:auto; 
	background-color:#999; left: 0; top: 0;
}	

/* overflow , overflow-x , overflow-y
박스 모델 안에서, 안의 콘텐츠가 박스를 벗어날 때 어떻게 처리할 지를 결정합니다. 

	visible : 기본 값으로, 박스를 벗어나는 콘텐츠가 그대로 보여집니다.
	hidden : 벗어나는 콘텐츠를 모두 숨겨버립니다. (박스를 넘어간 부분은 보이지 않습니다.)
	scroll : 우측에 스크롤 바를 노출하여, 스크롤 바를 통해 콘텐츠를 확인할 수 있도록 합니다. 
	(박스를 넘어가든 넘어가지 않든 스크롤바가 나옵니다.)
	auto : scroll 속성 값은 스크롤 바가 항상 노출 되지만, auto 속성 값은 콘텐츠가 박스를 벗어날 때에만 스크롤 바를 노출합니다. (박스를 넘어가지 않으면 스크롤바가 나오지 않고, 박스를 넘어갈 때에는 스크롤바가 나옵니다.) */
#wrap div{width:150px; height:150px; position:absolute;}

#wrap .redBox{background-color:#F00; color:#fff; left:10px; right: 0; top:10px; z-index: 100;}

#wrap .greenBox{background-color:#0C0; left:50px; top:50px; z-index: 10;}

#wrap .blueBox{background-color:#39F; left:90px; top:90px; z-index: 1;}

	/*
		position
		-position 은 레이아웃을 배치하거나, 객체를 위치시킬때 사용하는 css 속성이다.
		-position 속성은 상속되지 않으며, 위(top), 아래(bottom), 왼쪽(left), 오른쪽(right) 의 위치를 같이 설정 할 수 있다.

		사용할 수 있는 속성
		static (기본값) :위치를 지정하지 않을 때 사용한다.

		relative : 기본적으로 표시된 위치를 기준으로 새로운 위치를 지정 할 수 있습니다.
		           : top bottom left right의 위치를 같이 설정 할 수도 있다.

		absolute : 원래 위치와 상관없이 위치를 지정할 수 있다. 단, 가장 가까운 상위 요소를 기준으로 위치가 결정 된다.(static제외)
			:  top bottom left right의 위치를 같이 설정 할 수도 있다.


		fixed : 원래 위치와 상관없이 위치를 지정할 수 있다. 하지만 상위 요소에 영향을 받지 않기 때문에 화면이 바뀌더라도 고정된 위치를 설정 할 수 있다.
			     브라우저 화면의 상대 위치를 기준으로 위치가 결정된다.
		      : 스크롤을 내려도 항상 같은 곳에 위치하는 상단바, 하단바, 광고 등이 이 속성을 이용하는 것입니다
 		      : top, bottom, left, right 등으로 위치를 지정하고 width 와 height 로 요소의 크기를 지정할 수 있습니다.

		좌표의 기준이 될 부모의 객체에 position:relative; 를 선언
		그것을 기준으로 움직일 자식 객체에게 position:absolute; 를 선언
		그렇게 되면 부모객체의 위치를 기준으로 자식객체가 움직이게 됨
		
		부모객체의 높이를 정해주면 자식객체가 부모객체를 뚫고 나오는 현상을 방지할수있음.
		만약 잘리는 부분을 scroll 로 처리하고 싶다면 overflow에 scroll을, 잘리게 둘 것이라면
		hidden;을 부여한다.
	*/