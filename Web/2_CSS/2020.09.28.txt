
* 코드는 기본적으로 순차적으로 적용되는데 특정코드를 좀 더 정확하게 잡아서 스타일을 줬을 경우 순서가 위에 있더라도 우선 적용되는 경우가 있다?

* 구글폰트. 폰트는 무게가 있어서 홈페이지 만들때는 최대 3개까지로 제한. 이것도 용량을 덜어내가 위해서 굵기 종류를 줄인다. 보통은 하나, 둘 정도 사용하는듯?

* 용량을 줄이기 위해서 로고 텍스트 같은것도 이미지로 하는경우가 있음. 폰트보다 이미지가 가볍기 때문에

* 외부에서 CDN 방식으로 데이터를 가져올때 CSS 안에서는 [@import url('주소');] 를 쓰는것 같은데.

* {line-height: 사이즈;}
    폰트위 아래의 크기. 폰트사이즈x입력된 수치 값으로 들어간다. 자간은 글과 글 사이의 공간만 넓히는 개념이고 이거는 글자를 기준으로 위, 아래로 공간을 넣어주는 개념. 자간넓이랑은 다름.

* lorem 넣을 텍스트가 없을때 넣는 랜덤 텍스트. 라틴어래.

* {withe-space: (normal/nowrap);}
    normal 은 기본값. 스타일의 넓이값에 맞추어 자동으로 줄바꿈을 한다.
    nowrap 감싸지 않음. 스타일의 넓이값에 상관없이 한줄로 텍스트를 표시한다.

* {overflow: hidden;}
    스타일의 넓이값 안에 담지 못하는 텍스트를 숨겨버린다.

* {text-overflow: ellipsis;}
    숨겨져있을때는 ... 로 표시함.

* {letter-spacing: (수치);}
    글자 사이사이의 간격을 설정할 수 있음. 자간.

* {word-spacing: (수치);}
    단어 사이사이의 간격을 설정할 수 있음. 띄어쓰기 간격.

* {text-indent: (수치);}
    들여쓰기 기능인데 들여쓰기 자체는 잘 사용하지 않는다. 마이너스 수치를 크게 넣어주면 화면에는 보이지 않는 텍스트가 완성됨. 개발자 사이의 의사소통이나 시각장애인을 위한 설명문이 필요한데 실제 화면에는 필요하지 않을 때 사용된다.

* {text-decolation: (none/underline/overline/line-through);}
    글자 꾸미기? 각각 기본값, 밑줄긋기, 윗줄긋기, 취소선

* {text-transform: (none/uppercase/lowercase/capitalize);}
    소문자 대문자 변환. 각각 기본값, 대문자, 소문자, 소문자 단어에서 앞글자만 대문자. 영어에서만 적용되겠네. 역시 한글에서는 소용없음.

* {vertical-align: (속성 혹은 %수치)}
    글자를 위, 아래 정렬할때 쓴다? 인라인 속성에만 들어간다. 실무에서 안쓸수도 있음.

* margin 은 밀어내는 개념. padding 은 해당개체의 크기가 커짐.
* 블록속성의 경우 width 값을 주고 나머지 공간은 margin 이 가지고 있는 개념.
* 인라인 속성의 경우는 width 값을 줘도 자기 데이터만큼의 크기 이상은 가질 수 없다.
* 스타일 {display: inline-block;} 을 주면 블록속성과 인라인 속성을 동시에 가지게 할 수 있는듯.