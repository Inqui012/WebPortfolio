
* padding 은 표시되는 내용의 넓이+padding 넓이니까 사용하기 편리하다. 요소에 height 를 쓰는일이 많이 없다?

* 예제에서 section 이랑 aside 사이 미지의 5px > 텍스트에 마진이 있어????? 아니야? 엔터를 띄어쓰기로 인식해서? section 태그랑 aside 태그 사이에 엔터가 있어서 이걸 띄어쓰기로 인식하고 그만큼 거리가 넓어짐 >> 맙소사
    이거 맞추는 속성이 따로 있대.

* 띄어쓰기의 크기는 6px
  없애려면 CSS word-spacing 속성으로 -6px 주면 사라짐.

* 픽셀은 고정값. 비율값이 퍼센트를 많이쓸것 같긴함. 퍼센트 비율의 기준은 부모의 크기.
    비율을 넣었을때 표시가 안되면 부모태그가 해당 크기를 가지고 있지 않음.
    body 과 html 은 넓이는 있지만 높이는 없음.
    화면 가득 하려면 html 높이를 퍼센트를 주는데 이건 html 의 부모태그, 브라우저의 크기를 가져오는 개념.

* rem , em 단위. 폰트의 크기를 받아서 쓰는 단위. 선택사항.
    rem 최상위 태그인 html 의 폰트사이즈를 받아서 크기를 조정한다. html 의 기본 폰트사이즈는 16px. > 1rem = 16px
    웹상에서 사용하라고 하는 권고사항인 단위인데 우리나라에서는 안쓰는곳이 많음. 웹상에서 편의성을 위해 폰트크기를 조절할 수 있게 해 놓을때가 있는데, 이럴 때 변경되는게 html 의 폰트사이즈라서 이 단위를 사용하면 편리한 기능이기 때문에 존재.

    em 적용된 해당 태그의 폰트사이즈를 받아서 크기를 조정. 지덩된 태그의 폰트사이즈를 1단위로 계산한다. 해당 태그에 폰트사이즈가 없을경우에는 부모 태그의 사이즈를 가져옴. 태그의 속성은 기본적으로 지정되지 않았을 경우 부모에게서 상속되어 오기 때문에. 실제로 많이 쓰임.
    종속된 태그가 많을 때 일일히 계산하기 버거워서 자주 안쓰이는듯.

* vw , vh (viewport width / viewport height) 브라우저의 크기를 받아서 사용하는 단위.
    실제로는 이걸 많이 쓰게 될듯. 부모와 상관없이 브라우저의 크기에 의존하기 때문에 멀티브라우징이 편할것 같음?
